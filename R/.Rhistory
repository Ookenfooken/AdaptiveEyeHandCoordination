library("R.matlab")
library("lme4")
library("lmerTest")
library("ggplot2")
setwd("C:/Users/Jolande/Documents/GitHub/CompetitionGaze/DualTask/Arrrr")
### SEPARATE BALL/SLOT PHASES ###
#################################
ballFixData = data.frame(readMat("glmData_ball_2.mat"))
colnames(ballFixData) <- c("subject", "testID", "ballFix", "ballApproach", "ballGrasp", "transport",
"fixOnset", "fixOffset", "fixMidpoint")
ballFixData$subject <- as.factor(ballFixData$subject)
ballFixData$testID <- as.factor(ballFixData$testID)
ballFixData$ballFix <- as.factor(ballFixData$ballFix)
ballFixations = ballFixData[ballFixData$ballFix == 1,]
ballFixations$ballFix <- NULL
ballFixations_PG <- ballFixations[ballFixations$testID == 3,]
ballFixations_TW <- na.omit(ballFixations[ballFixations$testID == 4,])
ballFix.PG.glm <- lmer(fixOnset ~ ballApproach + ballGrasp + transport + (1|subject), data = ballFixations_PG)
summary(ballFix.PG.glm)
View(ballFix.PG.glm)
ballFix.TW.glm <- lmer(fixOnset ~  ballApproach + ballGrasp + transport + (1|subject), data = ballFixations_TW)
summary(ballFix.TW.glm)
slotFixData = data.frame(readMat("glmData_slot_2.mat"))
colnames(slotFixData) <- c("subject", "testID", "slotFix", "slotApproach", "ballInSlot", "return",
"fixOnset", "fixOffset", "fixMidpoint")
slotFixData$subject <- as.factor(slotFixData$subject)
slotFixData$testID <- as.factor(slotFixData$testID)
slotFixData$slotFix <- as.factor(slotFixData$slotFix)
slotFixations = slotFixData[slotFixData$slotFix == 1,]
slotFixations$slotFix <- NULL
slotFixations_PG <- na.omit(slotFixations[slotFixations$testID == 3,])
slotFixations_TW <- na.omit(slotFixations[slotFixations$testID == 4,])
slotFix.PG.glm <- lmer(fixOnset ~ slotApproach + ballInSlot + (1|subject), data = slotFixations_PG)
slotFix.TW.glm <- lmer(fixOnset ~ slotApproach + ballInSlot +  (1|subject), data = slotFixations_TW)
summary(slotFix.PG.glm)
summary(slotFix.TW.glm)
install.packages("R.matlab")
install.packages("ggplot2")
install.packages("ez")
library("R.matlab")
library("ez")
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
getwd()
# load in data
phaseDurations = data.frame(readMat("phaseDurations.mat"))
colnames(phaseDurations) <- c("participant", "testID", "tool", "dual",
"reach", "ballPhase", "transport", "slotPhase", "return")
phaseDurations$participant <- as.factor(phaseDurations$participant)
phaseDurations$testID <- as.factor(phaseDurations$testID)
phaseDurations$tool <- as.factor(phaseDurations$tool)
phaseDurations$dual <- as.factor(phaseDurations$dual)
phaseDurations$testID <- NULL
# aggregate data per condition and participant
phases_aov <- aggregate(. ~ participant + tool + dual, median, na.rm = TRUE, na.action = NULL, data = phaseDurations)
View(phases_aov)
View(phaseDurations)
# load in data
phaseDurations = data.frame(readMat("phaseDurations.mat"))
colnames(phaseDurations) <- c("participant", "testID", "tool", "dual",
"reach", "ballPhase", "transport", "slotPhase", "return")
phaseDurations$participant <- as.factor(phaseDurations$participant)
phaseDurations$testID <- NULL #redundant
phaseDurations$tool <- as.factor(phaseDurations$tool)
phaseDurations$dual <- as.factor(phaseDurations$dual)
# aggregate data per condition and participant
phases_aov <- aggregate(. ~ participant + tool + dual, median, na.rm = TRUE, na.action = NULL, data = phaseDurations)
View(phases_aov)
View(phases_aov)
test <- colSums(phases_aov[,4:8])
test <- c(phases_aov[,1:3], colSums(phases_aov[,4:8]))
View(test)
test <- c(phases_aov[1:3,], colSums(phases_aov[4:8,]))
test <- c(phases_aov[1:3,], colSums(phases_aov[,4:8]))
test <- cbind(phases_aov[,1:3], colSums(phases_aov[,4:8]))
test <- cbind(phases_aov[1:3,], colSums(phases_aov[,4:8]))
test <- cbind(phases_aov$participant, phases_aov$tool, phases_aov$dual, colSums(phases_aov[,4:8]))
test <- cbind(phases_aov$participant, phases_aov$tool, phases_aov$dual, colSums(phases_aov[4:8,]))
test <- colSums(phases_aov[,4:8])
test <- colSums(phases_aov[4:8,])
?colSums
test <- colSums(phases_aov[,c(4:8)])
test <- rowSums(phases_aov[,c(4:8)])
test <- cbind(phases_aov[1:3,], rowSums(phases_aov[,c(4:8)]))
test <- cbind(phases_aov[,1:3], rowSums(phases_aov[,c(4:8)]))
View(test)
phases_aov <- cbind(phases_aov[,1:3], rowSums(phases_aov[,c(4:8)]))
colnames(phases_aov) <-  c("participant", "testID", "tool", "dual", "duration")
# load in data
phaseDurations = data.frame(readMat("phaseDurations.mat"))
colnames(phaseDurations) <- c("participant", "testID", "tool", "dual",
"reach", "ballPhase", "transport", "slotPhase", "return")
phaseDurations$participant <- as.factor(phaseDurations$participant)
phaseDurations$testID <- NULL #redundant
phaseDurations$tool <- as.factor(phaseDurations$tool)
phaseDurations$dual <- as.factor(phaseDurations$dual)
# aggregate data per condition and participant
phases_aov <- aggregate(. ~ participant + tool + dual, median, na.rm = TRUE, na.action = NULL, data = phaseDurations)
phases_aov <- cbind(phases_aov[,1:4], rowSums(phases_aov[,c(4:8)]))
colnames(phases_aov) <-  c("participant", "testID", "tool", "dual", "duration")
View(phases_aov)
# aggregate data per condition and participant
phases_aov <- aggregate(. ~ participant + tool + dual, median, na.rm = TRUE, na.action = NULL, data = phaseDurations)
phases_aov <- cbind(phases_aov[,1:3], rowSums(phases_aov[,c(4:8)]))
colnames(phases_aov) <-  c("participant", "tool", "dual", "duration")
View(phases_aov)
aov_all <- ezANOVA(data = phases_aov, dv=duration, wid=participant, within=.(tool, dual), type = 2)
aov_all
# Anova Result
## Effect DFn DFd         F            p p<.05        ges
## 2      tool   1  10 45.329386 5.151229e-05     * 0.48909259
## 3      dual   1  10  3.352839 9.700496e-02       0.10092009
## 4 tool:dual   1  10  4.120279 6.982244e-02       0.03919357
# Because there is no effect of task load, we will compare phase duration for grasp modes separately
phases_fingerTips <- phases_aov[phases_aov$tool == 0,]
# Anova Result
## Effect DFn DFd         F            p p<.05        ges
## 2      tool   1  10 45.329386 5.151229e-05     * 0.48909259
## 3      dual   1  10  3.352839 9.700496e-02       0.10092009
## 4 tool:dual   1  10  4.120279 6.982244e-02       0.03919357
# Because there is no effect of task load, we will compare phase duration for grasp modes separately
phases_ttest <- aggregate(duration ~ participant + tool, mean, na.rm = TRUE, na.action = NULL, data = phases_aov)
ttest_tool <- t.test(phases_ttest[phases_ttest$tool == 0,]$duration, phases_ttest[phases_ttest$tool == 1,]$duration, paired)
ttest_tool <- t.test(phases_ttest[phases_ttest$tool == 0,]$duration, phases_ttest[phases_ttest$tool == 1,]$duration, paired = TRUE)
ttest_tool
# Anova Result
## Effect DFn DFd         F            p p<.05        ges
## 2      tool   1  10 45.329386 5.151229e-05     * 0.48909259
## 3      dual   1  10  3.352839 9.700496e-02       0.10092009
## 4 tool:dual   1  10  4.120279 6.982244e-02       0.03919357
# Because there is no effect of task load, we will compare phase duration for grasp modes separately
phases_compare <- aggregate(duration ~ participant + tool, mean, na.rm = TRUE, na.action = NULL, data = phases_aov)
duration_fingertips <- mean(phases_compare[phases_compare$tool ==1,])
duration_fingertips <- mean(phases_compare[phases_compare$tool ==0,]$duration)
duration_tweezers <- mean(phases_compare[phases_compare$tool ==1,]$duration)
duration_fingertips
sd_fingertips <- sd(phases_compare[phases_compare$tool ==0,]$duration)
sd_fingertips
duration_tweezers
sd_tweezers <- sd(phases_compare[phases_compare$tool == 1,]$duration)
sd_tweezers
# Anova Result
## Effect DFn DFd         F            p p<.05        ges
## 2      tool   1  10 45.329386 5.151229e-05     * 0.48909259
## 3      dual   1  10  3.352839 9.700496e-02       0.10092009
## 4 tool:dual   1  10  4.120279 6.982244e-02       0.03919357
# Because there is no effect of task load, we will compare phase duration for grasp modes separately
phases_compare <- aggregate(duration ~ participant + tool, mean, na.rm = TRUE, na.action = NULL, data = phaseDurations)
